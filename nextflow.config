// nextflow.config

params {
    // Input parameters
    reads = "data/*.fastq.gz"
    reference = "reference.fasta"
    
    // Plasmid size parameters (in base pairs)
    min_plasmid_size = 2000
    max_plasmid_size = 20000
    
    // Quality filtering parameters
    min_read_length = 1000
    max_read_length = 50000
    min_quality = 7
    
    // Assembly parameters
    overlap_threshold = 1000
    min_coverage = 10
    
    // Output directory
    outdir = "results"
    
    // External databases
    blast_db = "/path/to/blast/nt"  // Update this path
    
    // Container parameters
    container_cache = "$HOME/.nextflow_containers"
    singularity_enabled = false
    docker_enabled = true
}

// Executor configuration
executor {
    name = 'local'
    cpus = 8
    memory = '32 GB'
}

// Process configuration
process {
    // Default process configuration
    executor = 'local'
    errorStrategy = 'retry'
    maxRetries = 2
    
    // Container settings
    container = 'ubuntu:20.04'
    
    // Resource requirements by process
    withName: 'QUALITY_FILTER' {
        cpus = 2
        memory = '4 GB'
        time = '2h'
    }
    
    withName: 'SIZE_FILTER' {
        cpus = 2
        memory = '4 GB'
        time = '2h'
    }
    
    withName: 'PLASMID_ASSEMBLY' {
        cpus = 8
        memory = '16 GB'
        time = '6h'
        container = 'staphb/flye:2.9.2'
    }
    
    withName: 'POLISH_ASSEMBLY' {
        cpus = 4
        memory = '8 GB'
        time = '4h'
        container = 'ontresearch/medaka:1.8.0'
    }
    
    withName: 'IDENTIFY_PLASMIDS' {
        cpus = 1
        memory = '2 GB'
        time = '1h'
        container = 'python:3.9-slim'
    }
    
    withName: 'ALIGN_TO_REFERENCE' {
        cpus = 4
        memory = '8 GB'
        time = '2h'
        container = 'staphb/minimap2:2.24'
    }
    
    withName: 'VARIANT_CALLING' {
        cpus = 2
        memory = '4 GB'
        time = '2h'
        container = 'staphb/samtools:1.17'
    }
    
    withName: 'STRUCTURAL_VARIANT_DETECTION' {
        cpus = 2
        memory = '4 GB'
        time = '2h'
        container = 'python:3.9-slim'
    }
    
    withName: 'BLAST_UNKNOWN_REGIONS' {
        cpus = 4
        memory = '8 GB'
        time = '4h'
        container = 'ncbi/blast:2.14.0'
    }
    
    withName: 'GENERATE_REPORT' {
        cpus = 1
        memory = '2 GB'
        time = '1h'
        container = 'python:3.9-slim'
    }
}

// Container configuration
docker {
    enabled = params.docker_enabled
    fixOwnership = true
    runOptions = '--user $(id -u):$(id -g)'
}

singularity {
    enabled = params.singularity_enabled
    autoMounts = true
    cacheDir = params.container_cache
}

// Reporting configuration
report {
    enabled = true
    file = "${params.outdir}/pipeline_report.html"
}

timeline {
    enabled = true
    file = "${params.outdir}/timeline.html"
}

trace {
    enabled = true
    file = "${params.outdir}/trace.txt"
}

dag {
    enabled = true
    file = "${params.outdir}/dag.svg"
}

// Profile configurations
profiles {
    local {
        executor.name = 'local'
        executor.cpus = 8
        executor.memory = '32 GB'
    }
    
    cluster {
        executor.name = 'slurm'
        process.queue = 'normal'
        process.time = '24h'
        process.clusterOptions = '--account=your_account'
    }
    
    docker {
        docker.enabled = true
        singularity.enabled = false
    }
    
    singularity {
        singularity.enabled = true
        docker.enabled = false
        singularity.cacheDir = params.container_cache
    }
    
    test {
        params.reads = "test_data/*.fastq.gz"
        params.reference = "test_data/reference.fasta"
        params.outdir = "test_results"
        params.min_plasmid_size = 1000
        params.max_plasmid_size = 10000
    }
}

// Manifest
manifest {
    name = 'plasmid-assembly-pipeline'
    author = 'Your Name'
    description = 'Oxford Nanopore plasmid assembly and variant calling pipeline'
    mainScript = 'main.nf'
    nextflowVersion = '>=21.04.0'
    version = '1.0.0'
}